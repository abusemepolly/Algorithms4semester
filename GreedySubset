def greedy_subset_sum(S, T):
    """
    Решение задачи о сумме подмножеств с использованием жадного алгоритма.

    Parameters:
    S (list of int): Исходное множество чисел.
    T (int): Целевая сумма.

    Returns:
    tuple: Подмножество чисел, дающее в сумме T, или пустой список, если решение не найдено.
    """
    # Сортировка множества S в порядке убывания
    S.sort(reverse=True)

    current_sum = 0  # Текущая сумма
    selected_subset = []  # Выбранное подмножество

    # Проход по элементам множества в порядке убывания
    for s in S:
        if current_sum + s <= T:  # Если добавление текущего элемента не превышает целевую сумму
            selected_subset.append(s)  # Добавляем элемент в подмножество
            current_sum += s  # Обновляем текущую сумму
            if current_sum == T:  # Если целевая сумма достигнута
                break  # Завершаем цикл

    if current_sum == T:
        print(f"Найденное подмножество: {selected_subset}, Сумма: {current_sum}")
        return selected_subset
    else:
        print("Решение не найдено.")
        return []


S = [int(x) for x in input("Введите элементы множества через пробел: ").split()]
T = int(input("Введите целевую сумму: "))

greedy_subset_sum(S, T)
